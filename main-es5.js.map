{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/edit/edit.component.ts","webpack:///src/app/edit/edit.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/services.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EditComponent","service","modalService","dataobject","name","email","mobile","getData","subscribe","data","myData","update","console","log","alert","content","d","open","size","window","confirm","success","HomeComponent","create","dismissAll","details","ServicesService","http","baseUrl","obj","post","get","_id","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { EditComponent } from './edit/edit.component';\n\n\nconst routes: Routes = [ \n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n\n  { path:'home', component:HomeComponent },\n  {path : 'edit', component:EditComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\n\n\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n\n\n})\n\nexport class AppComponent  implements OnInit{\n  \nconstructor() {\n }\n\n\n\nngOnInit() {\n\n  \n}\n\n  }","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServicesService } from './services.service';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HomeComponent } from './home/home.component';\nimport { EditComponent } from './edit/edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    EditComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [ServicesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ServicesService } from '../services.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css'],\n  providers: [NgbModal]\n\n})\nexport class EditComponent implements OnInit {\ndataobject:any;\nmyData:any;\n\n  constructor(private service:ServicesService, private modalService: NgbModal) { \n    this.dataobject = {\n      name:\"\",\n      email:\"\",\n      mobile:\"\"\n  \n    }\n  \n  }\n\n  ngOnInit(): void {\n    this.service.getData().subscribe((data:object)=>{\n      this.myData = data;\n     })\n  }\n\n\n//Update Data\n  update(){\n    this.service.update(this.dataobject).subscribe((data:object)=>{\n      console.log(this.dataobject);\n      alert('saved')\n        });\n        \n      \n  \n  }\n\n  //Open Modal\n  openXl(content,d){\n    this.modalService.open(content, { size: 'lg' });\n    this.dataobject = d; \n  }\n\n\n  //Delete Data\n  delete(id){\n    if(window.confirm('are you sure you want to delete?'))\n    {\n        this.service.delete(id).subscribe(success => {\n          if (success) {\n            this.service.getData().subscribe((data)=>{\n              this.myData = data;\n             });\n\n            alert('Deleted Successfully')\n          }\n        });\n    };\n  }\n\n\n}\n","<!----------------Table for View and Edit Data           -->\n    <table class=\"table table-striped\">\n        <thead>\n        <tr>\n          <th scope=\"col\">S.No</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Mobile</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let d of myData; index as i\">\n          <th scope=\"row\">{{ i + 1 }}</th>\n          <td>\n            {{ d.name }}\n          </td>\n          <td>{{ d.email }}</td>\n          <td>{{ d.mobile}}</td>\n          <button class=\"btn btn-primary\" (click)=\"openXl(content,d)\">\n            Edit\n          </button>&nbsp;&nbsp;\n          \n          <button class=\"btn btn-danger\" (click)=\"delete(d._id)\">\n            Delete\n          </button>\n        </tbody>\n      </table>\n    \n\n\n      <!-------------------------Model for updating Data              -->\n        \n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Edit Data</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    </div>\n    <div class=\"modal-body\">\n       \n  \n      <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <h4 style=\"font-size: 16px; color: black; font-family: lato;\">Name</h4>\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"dataobject.name\" >\n                <h4 style=\"font-size: 16px; color: black; font-family: lato;\">Email</h4>\n                <input type=\"text\" [(ngModel)]=\"dataobject.email\" class=\"form-control\" >\n                <h4 style=\"font-size: 16px; color: black; font-family: lato;\">Mobile</h4>\n                <input type=\"number\" [(ngModel)]=\"dataobject.mobile\" class=\"form-control\" >\n                <br><br>\n                <button class=\"btn btn-success\" (click)=\"update()\">\n                 Update\n                </button>\n        \n            </div>\n        </div>\n        </div>\n        \n  </div></ng-template>\n  ","\nimport { Component, OnInit } from '@angular/core';\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ServicesService } from '../services.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  providers: [NgbModal]\n\n})\n\nexport class HomeComponent  implements OnInit{\n  dataobject:any;\n  myData: object;\n\nconstructor(private service: ServicesService, private modalService: NgbModal) {\n\n  this.dataobject = {\n    name:\"\",\n    email:\"\",\n    mobile:\"\"\n\n  }\n }\n\n\n\nngOnInit() {\n  this.service.getData().subscribe((data:object)=>{\n    this.myData = data;\n   })\n\n  \n}\ndetails(){\n  this.service.create(this.dataobject).subscribe((data)=>{\n    console.log(data);\n    this.service.getData().subscribe((data:object)=>{\n      this.myData = data;\n     })\n  \n  })\n  \n  };\n\n\n  openXl(content,d){\n    this.modalService.open(content, { size: 'lg' });\n    this.dataobject = d; \n  }\n\n  update(){\n    this.service.update(this.dataobject).subscribe((data:object)=>{\n      console.log(this.dataobject);\n      alert('saved')\n        });\n        this.modalService.dismissAll();\n        \n      \n  \n  }\n  delete(id){\n    if(window.confirm('are you sure you want to delete?'))\n    {\n        this.service.delete(id).subscribe(success => {\n          if (success) {\n            this.service.getData().subscribe((data)=>{\n              this.myData = data;\n             });\n\n            alert('Deleted Successfully')\n          }\n        });\n    };\n  }\n\n  }","\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h4 style=\"font-size: 16px; color: black; font-family: lato;\">Name</h4>\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"dataobject.name\" >\n            <h4 style=\"font-size: 16px; color: black; font-family: lato;\">Email</h4>\n            <input type=\"text\" [(ngModel)]=\"dataobject.email\" class=\"form-control\" >\n            <h4 style=\"font-size: 16px; color: black; font-family: lato;\">Mobile</h4>\n            <input type=\"number\" [(ngModel)]=\"dataobject.mobile\" class=\"form-control\" >\n            <br><br>\n            <button class=\"btn btn-success\" (click)=\"details()\">\n             Submit\n            </button>\n            <br><br>\n            <button class=\"btn btn-primary\" routerLink=\"/edit\">\n                View\n               </button>\n    \n        </div>\n    </div>\n    </div>\n  ","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ServicesService {\n\n  constructor(private http: HttpClient) {}\n\n  baseUrl = \"http://localhost:3000/api\";\n\n\n\n\n   create(obj){\n     console.log('ak')\n     return this.http.post(`${this.baseUrl}/Create`, obj)\n   }\n   getData(){\n    console.log('ak')\n    return this.http.get(`${this.baseUrl}/Create`)\n  }\n  delete(id:any) {\n    console.log(id)\n    return this.http.get(`${this.baseUrl}/delete/${id}`);\n  } \n   update(obj){\n    console.log(obj)\n    return this.http.post(`${this.baseUrl}/update/${obj._id}`, obj)\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}